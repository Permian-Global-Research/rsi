% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_landsat_imagery.R
\name{get_landsat_imagery}
\alias{get_landsat_imagery}
\title{Get Landsat imagery}
\usage{
get_landsat_imagery(
  aoi,
  start_date,
  end_date,
  ...,
  pixel_x_size = 30,
  pixel_y_size = 30,
  imagery_time_step = "P1D",
  imagery_aggregation_function = "median",
  imagery_resampling_function = "bilinear",
  reduce_time = TRUE,
  remap_band_names = landsat_band_mapping$planetary_computer_v1,
  stac_source = attr(remap_band_names, "stac_source"),
  collections = attr(remap_band_names, "collection_name"),
  qa_band_name = attr(remap_band_names, "qa_name"),
  platforms = c("landsat-9", "landsat-8"),
  download_function = attr(remap_band_names, "download_function"),
  limit = 999,
  creation_options = list(COMPRESS = "DEFLATE", PREDICTOR = "3"),
  reduce_function = "median",
  directory = "."
)
}
\arguments{
\item{aoi}{An sf(c) object outlining the area of interest to get imagery for.
Will be used to get the bounding box used for calculating metrics and the
output data's CRS.}

\item{start_date, end_date}{Character of length 1: The first and last date,
respectively, of imagery to include in metrics calculations. Should be in
YYYY-MM-DD format.}

\item{...}{not used}

\item{pixel_x_size}{Numeric of length 1: size of pixels in x-direction
(longitude / easting).}

\item{pixel_y_size}{Numeric of length 1: size of pixels in y-direction
(latitude / northing).}

\item{imagery_time_step}{Character of length 1: ISO8601 period string (eg
"P1D", "P1Y") specifying the time step of imagery to get imagery for
(and, if \code{reduce_time = FALSE}, to save out).}

\item{imagery_aggregation_function}{Character of length 1: aggregation method
used to combine pixels with data from multiple images. Can be "min", "max",
"mean", "median", or "first".}

\item{imagery_resampling_function}{Character of length 1: resampling method
used in gdalwarp when images are read, can be "near", "bilinear", "bicubic"
or others as supported by gdalwarp.}

\item{reduce_time}{Logical of length 1: reduce all downloaded images into a
single image? Note that it's often more efficient to set \code{imagery_time_step}
to the same amount of time as imagery is being downloaded for.}

\item{remap_band_names}{A named vector, with names corresponding to band
names in the STAC catalog and values corresponding to the values they should
be updated to. Set to \code{NULL} to not remap band names.}

\item{stac_source}{Character of length 1: the STAC URL to download
imagery from. Defaults to the \code{stac_source} attribute of \code{remap_band_names}.}

\item{collections}{a \code{character} vector of collection IDs to include in
the search for items. Only items in one of the provided collections will be
searched.}

\item{qa_band_name}{Character of length 1: The name of the QA band in your
STAC source. The built-in band mappings store this in the \code{qa_name} attribute
of each set, which will be used automatically if this argument is not
manually provided.}

\item{platforms}{The acceptable satellites to download imagery from.}

\item{download_function}{A function that takes the output from
\code{\link[rstac:stac_search]{rstac::stac_search()}} and executes the request. Use this if you need to sign
requests for your endpoint, or use a non-GET verb.}

\item{limit}{an \code{integer} defining the maximum number of results
to return. If not informed, it defaults to the service implementation.}

\item{creation_options}{additional creation options for resulting GeoTIFF files, e.g. to define compression (see \url{https://gdal.org/drivers/raster/gtiff.html#creation-options})}

\item{reduce_function}{Character of length 1: the function to use to collapse
pixel values for each time interval into a single value for the entire
period. Possible reducers currently are "min", "max", "sum", "prod", "count",
"mean", "median", "var", "sd", "which_min", "which_max", "Q1" (1st quartile),
and "Q3" (3rd quartile).}

\item{directory}{The directory to save files generated by
\code{\link[gdalcubes:write_tif]{gdalcubes::write_tif()}} into.}
}
\value{
The file path images were written to.
}
\description{
This function downloads Landsat imagery from a STAC endpoint, by default
Microsoft's Planetary Computer. The \code{landsat_band_mapping} object included
in this package contains metadata relevant to the Planetary Computer STAC
endpoint.
}
\examples{
\dontrun{
aoi <- sf::st_point(c(-74.912131, 44.080410)) |>
  sf::st_sfc() |>
  sf::st_set_crs(4326) |>
  sf::st_transform(3857) |>
  sf::st_buffer(100)

get_landsat_imagery(
  aoi,
  "2022-06-01",
  "2022-08-30"
)
}

}
